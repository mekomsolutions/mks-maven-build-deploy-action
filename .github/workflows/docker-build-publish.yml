name: Docker Build and Publish

on:
  workflow_call:
    inputs:
      context:
        default: .
        description: 'Path to the build context'
        required: false
        type: string
      dockerfile:
        default: Dockerfile
        description: 'Path to the Dockerfile to build'
        required: false
        type: string
      image-name:
        description: 'Name of the image to build'
        required: true
        type: string
      download-artifacts:
        description: 'Whether to download artifacts or not'
        required: false
        type: boolean
        default: false
      artifact-name:
        default: artifact
        description: 'Name of the artifact to download'
        required: false
        type: string
      artifact-path:
        default: .
        description: 'Path to download the artifact to'
        required: false
        type: string
      image-version:
        description: "Version to tag the image with. Default is 'latest'"
        required: false
        type: string

    secrets:
        DOCKER_HUB_USERNAME:
            required: true
        DOCKER_HUB_PASSWORD:
            required: true


jobs:
  build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        if: ${{ inputs.download-artifacts }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.artifact-path }}
      
      - name: Get version
        if: github.event.inputs.image-version == ''
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $VERSION
          echo ::set-output name=version::$VERSION

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/${{ inputs.image-name }}
          VERSION=latest
          # Tag the image with latest.
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          # Tag the image with version.
          TAGS="${TAGS},${DOCKER_IMAGE}:${{ github.event.inputs.image-version == '' && steps.get_version.outputs.version || github.event.inputs.image-version }}"

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=dockerImage::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
